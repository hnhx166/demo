<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description></description>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="com.chnghx.core.shiro.session.SessionIdCookie">
		<constructor-arg value="${cookie.key}" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<!-- custom shiro session listener -->
	<bean id="customSessionListener" class="com.chnghx.core.shiro.listener.CustomSessionListener">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
	</bean>

	<bean id="rememberMeCookie" class="com.chnghx.core.shiro.session.SessionIdCookie">
		<constructor-arg value="${cookie.rememberMe.key}" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="${cookie.maxAge}" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('${cipher.key}')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>


	<!-- custom shiro session listener -->
	<bean id="customShiroSessionDAO" class="com.chnghx.core.shiro.session.CustomShiroSessionDAO">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="${session.validate.timespan}" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="sampleRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="cacheManager" ref="customShiroCacheManager" />
	</bean>
	<bean id="customShiroCacheManager" class="com.chnghx.core.shiro.session.cache.CustomShiroCacheManager">
		<property name="shiroCacheManager" ref="jedisShiroCacheManager" />
	</bean>
	<!-- ShiroCacheManager interface impl class by redis,save authorization 
		info to redis -->
	<bean id="jedisShiroCacheManager" class="com.chnghx.core.shiro.session.cache.JedisShiroCacheManager">
		<property name="jedisManager" ref="jedisManager" />
	</bean>
	<bean id="jedisManager" class="com.chnghx.core.shiro.session.cache.JedisManager">
		<property name="jedisPool" ref="jedisPool" />
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>


	<!-- 授权 认证 -->
	<bean id="sampleRealm" class="com.chnghx.core.shiro.realms.SampleRealm">
		<!-- <property name="credentialsMatcher" ref="customCredentialsMather"/> -->
	</bean>
	<bean id="login" class="com.chnghx.core.shiro.filter.LoginFilter" />

	<bean id="sessionManager"
		class="com.chnghx.core.shiro.session.SsoDefaultWebSessionManager">

		<property name="sessionValidationInterval" value="${session.sessionValidationInterval}" />
		<property name="globalSessionTimeout" value="${session.globalSessionTimeout}" />
		<property name="sessionDAO" ref="customShiroSessionDAO" />
		<property name="sessionListeners">
			<list>
				<ref bean="customSessionListener" />
			</list>
		</property>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="deleteInvalidSessions" value="true" />

		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<bean id="jedisShiroSessionRepository"
		class="com.chnghx.core.shiro.session.impl.JedisShiroSessionRepository">
		<property name="jedisManager" ref="jedisManager" />
	</bean>


	<!-- 认证数据库存储 -->
	<bean id="shiroManager"
		class="com.chnghx.core.shiro.auth.impl.ShiroAuthServiceImpl" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${url.login}" />
		<!-- TODO 待提取 -->
		<property name="successUrl" value="${url.successUrl}" />
		<property name="unauthorizedUrl" value="${url.unauthorizedUrl}" />
		<!-- 读取初始自定义权限内容 -->
		<property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}" />
		<property name="filters">
			<util:map>
				<entry key="login" value-ref="login"></entry>
			</util:map>
		</property>
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!--  -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>

